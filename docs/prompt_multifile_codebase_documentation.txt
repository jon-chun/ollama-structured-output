###DIR_STRUCTURE:
llm_decisions/
├── LICENSE
├── README.md
├── pyproject.toml
├── setup.py
├── requirements.txt
├── llm_decisions/
│   ├── __init__.py
│   ├── core/
│   │   ├── __init__.py
│   │   ├── config.py
│   │   ├── models.py
│   │   └── utils.py
│   ├── data/
│   │   ├── __init__.py
│   │   ├── data_manager.py
│   │   └── prompt_manager.py
│   ├── evaluation/
│   │   ├── __init__.py
│   │   ├── decision.py
│   │   ├── metrics.py
│   │   └── performance.py
│   └── main.py
└── tests/
    └── __init__.py

###CODE: /setup.py
###CODE: /pyproject.toml
###CODE: /llm-decisions/core/config.py
###CODE: /llm-decisions/core/models.py
###CODE: /llm-decisions/core/utils.py
###CODE: /llm-decisions/data/prompt_manager.py
###CODE: /llm-decisions/data/data_manager
###CODE: /llm-decisions/evaluation/metrics.py
###CODE: /llm-decisions/evaluation/performance.py
###CODE: /llm-decisions/evaluation/decision.py
###CODE: /llm-decisions/main.py
###CODE: all __init__.py files are empty

###INSTRUCTIONS:
Please  think step by step to carefully analyze and deeply understand this ###CODE and all the code *.py files listed and then:
1. In outline form enumerate all the actively callable *.py code files with a concise technical language including class definitions (properties and methods) with pydantic typed signature for all object methods and standalone functions with docstring summary of function, dependencies and other relevant properities
2. Based upon this analysis, understanding and summary outline provide a professional tech document that explains the overall code architecture, control flow, design choices/tradeoffs, and possible future imporovements for future developers joining the project 

